// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_PhanTranMinhTam_New.Data;

#nullable disable

namespace WebAPI_PhanTranMinhTam_New.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240918083153_AddGift")]
    partial class AddGift
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Cart", b =>
                {
                    b.Property<int>("IdCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCart"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdCart");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Cartitem", b =>
                {
                    b.Property<int>("IdCartItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCartItem"), 1L, 1);

                    b.Property<int>("IdCart")
                        .HasColumnType("int");

                    b.Property<int>("IdGift")
                        .HasColumnType("int");

                    b.Property<int>("QuantityGift")
                        .HasColumnType("int");

                    b.HasKey("IdCartItem");

                    b.HasIndex("IdGift");

                    b.HasIndex("IdCart", "IdGift")
                        .IsUnique();

                    b.ToTable("Cartitems");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Gift", b =>
                {
                    b.Property<int>("IdGift")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGift"), 1L, 1);

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Idparents")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuantityRequired")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGift");

                    b.HasIndex("Idparents");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EarnedPoints")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Orderitem", b =>
                {
                    b.Property<int>("IdOrderItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrderItem"), 1L, 1);

                    b.Property<int>("IdGift")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int?>("IdParent")
                        .HasColumnType("int");

                    b.Property<int>("QuantityGift")
                        .HasColumnType("int");

                    b.HasKey("IdOrderItem");

                    b.HasIndex("IdGift");

                    b.HasIndex("IdParent");

                    b.HasIndex("IdOrder", "IdGift")
                        .IsUnique();

                    b.ToTable("Orderitems");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Permission", b =>
                {
                    b.Property<int>("IdPermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermission"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPermission");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.RefreshToken", b =>
                {
                    b.Property<Guid>("IdRefreshToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdRefreshToken");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Role", b =>
                {
                    b.Property<int>("IdRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoles"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoles");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Rolepermission", b =>
                {
                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int>("IdPermission")
                        .HasColumnType("int");

                    b.HasKey("IdRole", "IdPermission");

                    b.HasIndex("IdPermission");

                    b.ToTable("Rolepermissions");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("IdUser");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserActivitys");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Cart", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Cartitem", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Cart", "Carts")
                        .WithMany("Cart_items")
                        .HasForeignKey("IdCart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Gift", "Gifts")
                        .WithMany("Cartitems")
                        .HasForeignKey("IdGift")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carts");

                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Gift", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Gift", "ParentGift")
                        .WithMany("ChildGifts")
                        .HasForeignKey("Idparents")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentGift");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Order", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Orderitem", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Gift", "Gifts")
                        .WithMany("Orderitem")
                        .HasForeignKey("IdGift")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Order", "Orders")
                        .WithMany("Order_items")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Orderitem", "ParentGift")
                        .WithMany("ChildGifts")
                        .HasForeignKey("IdParent")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Gifts");

                    b.Navigation("Orders");

                    b.Navigation("ParentGift");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.RefreshToken", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Rolepermission", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.User", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.Role", "Role")
                        .WithMany("users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.UserActivity", b =>
                {
                    b.HasOne("WebAPI_PhanTranMinhTam_New.Data.User", "User")
                        .WithMany("UserActivitys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Cart", b =>
                {
                    b.Navigation("Cart_items");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Gift", b =>
                {
                    b.Navigation("Cartitems");

                    b.Navigation("ChildGifts");

                    b.Navigation("Orderitem");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Order", b =>
                {
                    b.Navigation("Order_items");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Orderitem", b =>
                {
                    b.Navigation("ChildGifts");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("users");
                });

            modelBuilder.Entity("WebAPI_PhanTranMinhTam_New.Data.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("UserActivitys");
                });
#pragma warning restore 612, 618
        }
    }
}
